{"ast":null,"code":"import { OneDishComponent } from './one-dish/one-dish.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { RegisteringComponent } from './registering/registering.component';\nimport { LoggingComponent } from './logging/logging.component';\nimport { CartComponent } from './cart/cart.component';\nimport { MenuBarComponent } from './menu-bar/menu-bar.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nimport * as i2 from \"@angular/router\";\nexport class AppComponent {\n  constructor(httpService, _router) {\n    this.httpService = httpService;\n    this._router = _router;\n    this.title = 'Restaurant-App';\n    this.objectsList = [];\n    this.loggedUsers = [];\n    this.httpService.getDishes().subscribe(dishes => {\n      this.objectsList = dishes;\n    });\n  }\n  navigateToMain() {\n    this._router.navigate(['glowna']);\n  }\n  navigateToMainLog(token) {\n    this._router.navigate(['glowna/', token]);\n  }\n  // callbackFunction = this.httpService.getDish.bind(this.httpService);\n  onOutletLoaded(component) {\n    if (component instanceof OneDishComponent) {\n      component.callbackRequest = this.httpService.getDish.bind(this.httpService);\n    }\n    if (component instanceof MenuComponent) {\n      this.httpService.getDishes().subscribe(dishes => {\n        console.log(dishes);\n        component.objects = dishes;\n        component.loggedUsers = this.loggedUsers;\n        component.getUser = this.httpService.getUser.bind(this.httpService);\n        component.postOrder = this.httpService.postOrder.bind(this.httpService);\n      });\n    }\n    if (component instanceof RegisteringComponent) {\n      component.callbackRequest = this.httpService.postUser.bind(this.httpService);\n      component.load = this.navigateToMain.bind(this);\n    }\n    if (component instanceof LoggingComponent) {\n      component.callbackRequest = this.httpService.loggUser.bind(this.httpService);\n      component.loggedUsers = this.loggedUsers;\n      component.goto = this.navigateToMainLog.bind(this);\n    }\n    if (component instanceof CartComponent) {\n      component.getOrders = this.httpService.getOrders.bind(this.httpService);\n    }\n    if (component instanceof MenuBarComponent) {\n      component.loggedUsers = this.loggedUsers;\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  consts: [[3, \"activate\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-menu-bar\");\n      i0.ɵɵelementStart(1, \"router-outlet\", 0);\n      i0.ɵɵlistener(\"activate\", function AppComponent_Template_router_outlet_activate_1_listener($event) {\n        return ctx.onOutletLoaded($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["OneDishComponent","MenuComponent","RegisteringComponent","LoggingComponent","CartComponent","MenuBarComponent","AppComponent","constructor","httpService","_router","getDishes","subscribe","dishes","objectsList","navigateToMain","navigate","navigateToMainLog","token","onOutletLoaded","component","callbackRequest","getDish","bind","console","log","objects","loggedUsers","getUser","postOrder","postUser","load","loggUser","goto","getOrders","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Justyna\\Desktop\\PW\\Restaurant-App\\src\\app\\app.component.ts","C:\\Users\\Justyna\\Desktop\\PW\\Restaurant-App\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { OneDishComponent } from './one-dish/one-dish.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { RegisteringComponent } from './registering/registering.component';\nimport { Router } from '@angular/router';\nimport { LoggingComponent } from './logging/logging.component';\nimport { CartComponent } from './cart/cart.component';\nimport { MenuBarComponent } from './menu-bar/menu-bar.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Restaurant-App';\n  objectsList:Dish[] = [];\n  loggedUsers:Session[] = [];\n\n  constructor(private httpService: HttpService, private _router: Router){ \n    this.httpService.getDishes().subscribe(dishes=>{\n          this.objectsList = dishes;\n        })\n    \n  }\n\n  navigateToMain() {\n\n    this._router.navigate(['glowna']);\n\n  }\n\n  navigateToMainLog(token:String) {\n\n    this._router.navigate(['glowna/', token]);\n\n  }\n\n  // callbackFunction = this.httpService.getDish.bind(this.httpService);\n\n  onOutletLoaded(component: OneDishComponent | MenuComponent|RegisteringComponent|LoggingComponent|CartComponent|MenuBarComponent) {\n    if(component instanceof OneDishComponent){\n      component.callbackRequest = this.httpService.getDish.bind(this.httpService);\n    }\n    if(component instanceof MenuComponent){\n      this.httpService.getDishes().subscribe(dishes=>{\n        console.log(dishes);\n        component.objects = dishes;\n        component.loggedUsers = this.loggedUsers;\n        component.getUser = this.httpService.getUser.bind(this.httpService);\n        component.postOrder = this.httpService.postOrder.bind(this.httpService);\n      })\n    }\n    if(component instanceof RegisteringComponent){\n      component.callbackRequest = this.httpService.postUser.bind(this.httpService);\n      component.load = this.navigateToMain.bind(this);\n    }\n\n    if(component instanceof LoggingComponent){\n      component.callbackRequest = this.httpService.loggUser.bind(this.httpService);\n      component.loggedUsers = this.loggedUsers;\n      component.goto = this.navigateToMainLog.bind(this);\n    }\n\n    if(component instanceof CartComponent){\n      component.getOrders = this.httpService.getOrders.bind(this.httpService);\n    }\n\n    if(component instanceof MenuBarComponent){\n      component.loggedUsers = this.loggedUsers;\n    }\n    \n  } \n  \n  \n}\n\nexport interface Dish {\n  id: number;\n  name: string;\n  type: string;\n  category: string;\n  ingredients: string[];\n  max_number_per_day: number;\n  price: number;\n  description: string;\n  link?: string;\n}\n\nexport interface User {\n  id?: number;\n  nick: string;\n  email: string;\n  password: string;\n  dishes?: Dish[];\n  isActive?: boolean;\n  isAdmin?: boolean;\n}\n\nexport interface LoginCredentails{\n  email: string;\n  password: string;\n}\n\nexport interface Session{\n  id: number;\n  token: string;\n}\n\nexport interface Order{\n  id?: number;\n  user: User;\n  dish?: Dish;\n}","<app-menu-bar></app-menu-bar>\r\n<!-- <app-menu [objects] = 'objectsList'></app-menu> -->\r\n<!-- <app-one-dish [callbackRequest]=\"callbackFunction\"></app-one-dish> -->\r\n<!-- <router-outlet ></router-outlet> -->\r\n<router-outlet (activate)=\"onOutletLoaded($event)\"></router-outlet>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}