{"ast":null,"code":"import { OneDishComponent } from './one-dish/one-dish.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { RegisteringComponent } from './registering/registering.component';\nimport { LoggingComponent } from './logging/logging.component';\nimport { CartComponent } from './cart/cart.component';\nimport { MenuBarComponent } from './menu-bar/menu-bar.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { MenuChangerComponent } from './menu-changer/menu-changer.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nimport * as i2 from \"@angular/router\";\nexport class AppComponent {\n  constructor(httpService, _router) {\n    this.httpService = httpService;\n    this._router = _router;\n    this.title = 'Restaurant-App';\n    this.objectsList = [];\n    this.loggedUsers = [];\n    this.httpService.getDishes().subscribe(dishes => {\n      this.objectsList = dishes;\n    });\n  }\n  reloadBar() {\n    this._router.navigate(['']);\n  }\n  navigateToMain() {\n    // this._router.navigate(['glowna']);\n    // this.reloadBar();\n    // this.barComponent.ngOnInit();\n    this._router.navigate(['glowna']);\n    // window.location.reload();\n  }\n\n  navigateToMainLog(token) {\n    let tok = localStorage.getItem('currentUser');\n    this._router.navigate(['glowna/', tok]);\n  }\n  navigateToCart() {\n    this._router.navigate(['cart/', JSON.parse(localStorage.getItem(\"currentUser\") || '{}').token]);\n  }\n  // navigate = this.navigateToCart.bind(this);\n  // navigate = (token:String)=>{\n  //   this._router.navigate(['cart/', token]);\n  // }\n  // callbackFunction = this.httpService.getDish.bind(this.httpService);\n  onOutletLoaded(component) {\n    if (component instanceof OneDishComponent) {\n      component.callbackRequest = this.httpService.getDish.bind(this.httpService);\n      component.getReviews = this.httpService.getReviews.bind(this.httpService);\n      component.getUser = this.httpService.getUser.bind(this.httpService);\n      component.sendReview = this.httpService.sendReview.bind(this.httpService);\n    }\n    if (component instanceof MenuComponent) {\n      this.httpService.getDishes().subscribe(dishes => {\n        component.objects = dishes;\n        component.getUser = this.httpService.getUser.bind(this.httpService);\n        component.postOrder = this.httpService.postOrder.bind(this.httpService);\n      });\n    }\n    if (component instanceof RegisteringComponent) {\n      component.callbackRequest = this.httpService.postUser.bind(this.httpService);\n      component.load = this.navigateToMain.bind(this);\n    }\n    if (component instanceof LoggingComponent) {\n      component.callbackRequest = this.httpService.loggUser.bind(this.httpService);\n      component.loggedUsers = this.loggedUsers;\n      component.load = this.navigateToMain.bind(this);\n      component.reloadBar = this.reloadBar.bind(this);\n      // component.token = this.navigateToMainLog.bind(this);\n    }\n\n    if (component instanceof CartComponent) {\n      component.getOrders = this.httpService.getOrders.bind(this.httpService);\n      component.loggedUsers = this.loggedUsers;\n      component.removeById = this.httpService.deleteOrder.bind(this.httpService);\n      component.refresh = this.navigateToCart.bind(this);\n      component.goHistory = this.httpService.historicOrder.bind(this.httpService);\n    }\n    if (component instanceof MenuBarComponent) {\n      this.barComponent = component;\n      component.loggedUsers = this.loggedUsers;\n    }\n    if (component instanceof LogoutComponent) {\n      component.logout = this.httpService.logout.bind(this.httpService);\n      component.load = this.navigateToMain.bind(this);\n    }\n    // component.navtoCart = this.navigateToCart.bind(this);\n    if (component instanceof MenuChangerComponent) {\n      this.httpService.getDishes().subscribe(dishes => {\n        component.objects = this.objectsList;\n        component.getUser = this.httpService.getUser.bind(this.httpService);\n        component.postOrder = this.httpService.postOrder.bind(this.httpService);\n      });\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  consts: [[\"name\", \"secondary\", 3, \"activate\"], [3, \"activate\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"router-outlet\", 0);\n      i0.ɵɵlistener(\"activate\", function AppComponent_Template_router_outlet_activate_0_listener($event) {\n        return ctx.onOutletLoaded($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"router-outlet\", 1);\n      i0.ɵɵlistener(\"activate\", function AppComponent_Template_router_outlet_activate_1_listener($event) {\n        return ctx.onOutletLoaded($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i2.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["OneDishComponent","MenuComponent","RegisteringComponent","LoggingComponent","CartComponent","MenuBarComponent","LogoutComponent","MenuChangerComponent","AppComponent","constructor","httpService","_router","getDishes","subscribe","dishes","objectsList","reloadBar","navigate","navigateToMain","navigateToMainLog","token","tok","localStorage","getItem","navigateToCart","JSON","parse","onOutletLoaded","component","callbackRequest","getDish","bind","getReviews","getUser","sendReview","objects","postOrder","postUser","load","loggUser","loggedUsers","getOrders","removeById","deleteOrder","refresh","goHistory","historicOrder","barComponent","logout","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Justyna\\Desktop\\PW\\Restaurant-App\\src\\app\\app.component.ts","C:\\Users\\Justyna\\Desktop\\PW\\Restaurant-App\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { OneDishComponent } from './one-dish/one-dish.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { RegisteringComponent } from './registering/registering.component';\nimport { Router } from '@angular/router';\nimport { LoggingComponent } from './logging/logging.component';\nimport { CartComponent } from './cart/cart.component';\nimport { MenuBarComponent } from './menu-bar/menu-bar.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { MenuChangerComponent } from './menu-changer/menu-changer.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Restaurant-App';\n  objectsList:Dish[] = [];\n  loggedUsers:Session[] = [];\n  token:String;\n  barComponent: MenuBarComponent;\n\n  constructor(private httpService: HttpService, private _router: Router){ \n    this.httpService.getDishes().subscribe(dishes=>{\n          this.objectsList = dishes;\n        })\n    \n  }\n  \n  reloadBar(){\n    this._router.navigate(['']);\n  }\n\n  navigateToMain() {\n\n    // this._router.navigate(['glowna']);\n    // this.reloadBar();\n    // this.barComponent.ngOnInit();\n    this._router.navigate(['glowna']);\n    // window.location.reload();\n  }\n\n  navigateToMainLog(token:String) {\n    let tok = localStorage.getItem('currentUser');\n    this._router.navigate(['glowna/', tok]);\n\n  }\n\n  navigateToCart() {\n    this._router.navigate(['cart/', JSON.parse(localStorage.getItem(\"currentUser\")|| '{}').token]);\n  }\n  // navigate = this.navigateToCart.bind(this);\n\n  // navigate = (token:String)=>{\n  //   this._router.navigate(['cart/', token]);\n  // }\n  // callbackFunction = this.httpService.getDish.bind(this.httpService);\n\n  onOutletLoaded(component: OneDishComponent | MenuComponent|RegisteringComponent|LoggingComponent|CartComponent|MenuBarComponent|LogoutComponent|MenuChangerComponent) {\n    if(component instanceof OneDishComponent){\n      component.callbackRequest = this.httpService.getDish.bind(this.httpService);\n      component.getReviews = this.httpService.getReviews.bind(this.httpService);\n      component.getUser = this.httpService.getUser.bind(this.httpService);\n      component.sendReview = this.httpService.sendReview.bind(this.httpService);\n    }\n    if(component instanceof MenuComponent){\n      this.httpService.getDishes().subscribe(dishes=>{\n        component.objects = dishes;\n        component.getUser = this.httpService.getUser.bind(this.httpService);\n        component.postOrder = this.httpService.postOrder.bind(this.httpService);\n      })\n    }\n    if(component instanceof RegisteringComponent){\n      component.callbackRequest = this.httpService.postUser.bind(this.httpService);\n      component.load = this.navigateToMain.bind(this);\n    }\n\n    if(component instanceof LoggingComponent){\n      component.callbackRequest = this.httpService.loggUser.bind(this.httpService);\n      component.loggedUsers = this.loggedUsers;\n      component.load = this.navigateToMain.bind(this);\n      component.reloadBar = this.reloadBar.bind(this);\n      // component.token = this.navigateToMainLog.bind(this);\n    }\n\n    if(component instanceof CartComponent){\n      component.getOrders = this.httpService.getOrders.bind(this.httpService);\n      component.loggedUsers = this.loggedUsers;\n      component.removeById = this.httpService.deleteOrder.bind(this.httpService);\n      component.refresh = this.navigateToCart.bind(this);\n      component.goHistory = this.httpService.historicOrder.bind(this.httpService);\n    }\n\n    if(component instanceof MenuBarComponent){\n      this.barComponent = component;\n      component.loggedUsers = this.loggedUsers;    \n    }\n\n    if(component instanceof LogoutComponent){\n      component.logout = this.httpService.logout.bind(this.httpService);\n      component.load = this.navigateToMain.bind(this);   \n    }\n\n    // component.navtoCart = this.navigateToCart.bind(this);\n    if(component instanceof MenuChangerComponent){\n      this.httpService.getDishes().subscribe(dishes=>{\n        component.objects = this.objectsList;\n        component.getUser = this.httpService.getUser.bind(this.httpService);\n        component.postOrder = this.httpService.postOrder.bind(this.httpService);\n      })\n    }\n    \n  } \n  \n  \n}\n\nexport interface Dish {\n  id: number;\n  name: string;\n  type: string;\n  category: string;\n  ingredients: string[];\n  max_number_per_day: number;\n  price: number;\n  description: string;\n  link?: string;\n}\n\nexport interface User {\n  id?: number;\n  nick: string;\n  email: string;\n  password: string;\n  dishes?: Dish[];\n  isActive?: boolean;\n  isAdmin?: boolean;\n}\n\nexport interface LoginCredentails{\n  email: string;\n  password: string;\n}\n\nexport interface Session{\n  id: number;\n  token: string;\n}\n\nexport interface Order{\n  id?: number;\n  user: User;\n  dish?: Dish;\n  number?: number;\n  bought: boolean\n}\n\nexport interface Review{\n  id?: number;\n  user: User;\n  dish: Dish;\n  rating: number;\n  content: String\n}","<!-- <app-menu-bar></app-menu-bar> -->\r\n<!-- <app-menu [objects] = 'objectsList'></app-menu> -->\r\n<!-- <app-one-dish [callbackRequest]=\"callbackFunction\"></app-one-dish> -->\r\n<!-- <router-outlet ></router-outlet> -->\r\n<router-outlet (activate)=\"onOutletLoaded($event)\" name=\"secondary\"></router-outlet>\r\n<router-outlet (activate)=\"onOutletLoaded($event)\"></router-outlet>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}