{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ViewChild } from '@angular/core';\n// import dishes_data from 'dishes_data.json';\nlet MenuComponent = class MenuComponent {\n  constructor() {\n    // ngAfterViewInit(){\n    //   this.div.nativeElement.setAttribute('highlight', '');\n    // } \n    this.object = new Dish(\"Kotlet schabowy\", \"Danie obiadowe\", \"Danie mięsne\", [\"mięso schabowe\", \"ziemniaki\"], 12, 13.20, \"Pyszny domowy kotlecik!\", \"link\");\n    this.objects = [this.object];\n  }\n  create(object) {\n    let name = object.name;\n    let type = object.type;\n    let category = object.category;\n    let ingredients = object.ingredients;\n    let max_number_per_day = object.max_number_per_day;\n    let price = object.price;\n    let description = object.description;\n    let link = object.link;\n    const el = document.createElement(\"div\");\n    el.classList.add(\"book\");\n    el.style.setProperty(\"background-color\", \"#B0B0B0\");\n    let bin = document.createElement(\"button\");\n    bin.classList.add(\"material-symbols-outlined\");\n    bin.classList.add(\"bin\");\n    bin.innerText = \"delete\";\n    // bin.addEventListener('click', delete_div, false)\n    // bins_btn.push(bin)\n    const name_text = document.createElement(\"div\");\n    name_text.innerText = name;\n    name_text.classList.add(\"data1\");\n    const type_text = document.createElement(\"div\");\n    type_text.innerText = type;\n    type_text.classList.add(\"data1\");\n    const category_text = document.createElement(\"div\");\n    category_text.innerText = type;\n    category_text.classList.add(\"data1\");\n    const ingredients_text = document.createElement(\"div\");\n    let str = \"\";\n    for (let i = 0; i < ingredients.length; i++) {\n      str = str + ingredients[i];\n    }\n    ingredients_text.innerText = str;\n    ingredients_text.classList.add(\"data1\");\n    const max_number_text = document.createElement(\"div\");\n    max_number_text.innerText = max_number_per_day.toString();\n    max_number_text.classList.add(\"data1\");\n    const price_text = document.createElement(\"div\");\n    price_text.innerText = price.toString();\n    price_text.classList.add(\"data1\");\n    const description_text = document.createElement(\"div\");\n    description_text.innerText = description;\n    description_text.classList.add(\"data1\");\n    const link_text = document.createElement(\"div\");\n    link_text.innerText = link;\n    link_text.classList.add(\"data1\");\n    // let books_ = document.getElementsByClassName('books');\n    // const books = document.getElementById('books');\n    // const arr = Array.from(books_);\n    // let books = arr[0];\n    // if(books != null){\n    // @ViewChild('books') div: ElementRef;\n    el.appendChild(name_text);\n    el.appendChild(type_text);\n    el.appendChild(category_text);\n    el.appendChild(ingredients_text);\n    el.appendChild(max_number_text);\n    el.appendChild(price_text);\n    el.appendChild(description_text);\n    el.appendChild(link_text);\n    el.appendChild(bin);\n    this.books.nativeElement.appendChild(el);\n    return el;\n    //}\n  }\n\n  concate(a) {\n    let str = \"\";\n    for (let i = 0; i < a.length; i++) {\n      if (str.length != 0) {\n        str = str + \", \";\n      }\n      str = str + a[i];\n    }\n    return str;\n  }\n};\n__decorate([ViewChild('books')], MenuComponent.prototype, \"books\", void 0);\nMenuComponent = __decorate([Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})], MenuComponent);\nexport { MenuComponent };\nclass Dish {\n  constructor(name, type, category, ingredients, max_number_per_day, price, description, link) {\n    this.name = name;\n    this.type = type;\n    this.category = category;\n    this.ingredients = ingredients;\n    this.max_number_per_day = max_number_per_day;\n    this.price = price;\n    this.description = description;\n    this.link = link;\n  }\n}\n//}\n// const btn = document.querySelector('.add');","map":{"version":3,"mappings":"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","names":["Component","ViewChild","MenuComponent","constructor","Dish","object","create","name","type","category","ingredients","max_number_per_day","price","description","link","el","document","createElement","classList","add","style","setProperty","bin","innerText","name_text","type_text","category_text","ingredients_text","str","i","length","max_number_text","toString","price_text","description_text","link_text","appendChild","books","nativeElement","concate","a","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Justyna\\Desktop\\PW\\Restaurant-App\\src\\app\\menu\\menu.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ViewChild } from '@angular/core';\nimport { ElementRef } from '@angular/core';\n// import dishes_data from 'dishes_data.json';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent{\n  @ViewChild('books') books: ElementRef;\n  // ngAfterViewInit(){\n  //   this.div.nativeElement.setAttribute('highlight', '');\n  // } \n  object = new Dish(\"Kotlet schabowy\", \"Danie obiadowe\", \"Danie mięsne\", [\"mięso schabowe\", \"ziemniaki\"], 12, 13.20, \"Pyszny domowy kotlecik!\", \"link\");\n  objects:Dish[] = [this.object];\n\n  create(object:Dish){\n    let name = object.name;\n    let type = object.type;\n    let category = object.category;\n    let ingredients = object.ingredients;\n    let max_number_per_day = object.max_number_per_day;\n    let price = object.price;\n    let description = object.description;\n    let link = object.link;\n  \n    const el = document.createElement(\"div\");\n  \n    el.classList.add(\"book\")\n    el.style.setProperty(\"background-color\", \"#B0B0B0\");\n    \n    let bin = document.createElement(\"button\");\n    bin.classList.add(\"material-symbols-outlined\")\n    bin.classList.add(\"bin\")\n    bin.innerText = \"delete\";\n    // bin.addEventListener('click', delete_div, false)\n    // bins_btn.push(bin)\n  \n    const name_text = document.createElement(\"div\");\n    name_text.innerText = name\n    name_text.classList.add(\"data1\")\n  \n    const type_text = document.createElement(\"div\");\n    type_text.innerText = type\n    type_text.classList.add(\"data1\")\n  \n    const category_text = document.createElement(\"div\");\n    category_text.innerText = type\n    category_text.classList.add(\"data1\")\n  \n    const ingredients_text = document.createElement(\"div\");\n    let str = \"\";\n    for(let i = 0; i < ingredients.length; i++){\n      str = str + ingredients[i];\n    }\n    ingredients_text.innerText = str\n    ingredients_text.classList.add(\"data1\")\n  \n    const max_number_text = document.createElement(\"div\");\n    max_number_text.innerText = max_number_per_day.toString();\n    max_number_text.classList.add(\"data1\")\n  \n    const price_text = document.createElement(\"div\");\n    price_text.innerText = price.toString();\n    price_text.classList.add(\"data1\")\n  \n    const description_text = document.createElement(\"div\");\n    description_text.innerText = description;\n    description_text.classList.add(\"data1\")\n  \n    const link_text = document.createElement(\"div\");\n    link_text.innerText = link;\n    link_text.classList.add(\"data1\")\n  \n    // let books_ = document.getElementsByClassName('books');\n    // const books = document.getElementById('books');\n    // const arr = Array.from(books_);\n    // let books = arr[0];\n    // if(books != null){\n  \n    // @ViewChild('books') div: ElementRef;\n    \n    el.appendChild(name_text)\n    el.appendChild(type_text)\n    el.appendChild(category_text)\n    el.appendChild(ingredients_text)\n    el.appendChild(max_number_text)\n    el.appendChild(price_text)\n    el.appendChild(description_text)\n    el.appendChild(link_text)\n    el.appendChild(bin)\n    this.books.nativeElement.appendChild(el);\n    return el;\n    //}\n  }\n  concate(a:string[]){\n    let str = \"\";\n    for(let i = 0; i < a.length; i++){\n      if(str.length != 0){\n        str = str + \", \"\n      }\n      str = str + a[i];\n    }\n    return str;\n  }\n}\n  class Dish {\n    name: string;\n    type: string;\n    category: string;\n    ingredients: string[];\n    max_number_per_day: number;\n    price: number;\n    description: string;\n    link: string;\n  \n    constructor(name: string, type: string, category: string, ingredients: string[], max_number_per_day: number, price: number, description: string, link: string){\n      this.name = name;\n      this.type = type;\n      this.category = category;\n      this.ingredients = ingredients;\n      this.max_number_per_day = max_number_per_day\n      this.price = price;\n      this.description = description;\n      this.link = link;\n    }\n  }\n//}\n// const btn = document.querySelector('.add');\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}